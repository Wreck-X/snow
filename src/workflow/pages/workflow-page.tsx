import React from 'react';
import { useParams } from 'react-router-dom';
import Button from '../components/button';
import WorkflowGraph from '../components/workflowgq';

const workflowJson = {
  "ownerApp": "",
  "createTime": 1729332031397,
  "updateTime": 1729332031821,
  "status": "COMPLETED",
  "endTime": 1729332031821,
  "workflowId": "f9ce5d57-8e00-11ef-bbcb-0242ac110002",
  "tasks": [
    {
      "taskType": "get_user_email",
      "status": "COMPLETED",
      "inputData": {
        "userid": "user_a"
      },
      "referenceTaskName": "get_user_email_ref",
      "retryCount": 0,
      "seq": 1,
      "pollCount": 1,
      "taskDefName": "get_user_email",
      "scheduledTime": 1729332031401,
      "startTime": 1729332031602,
      "endTime": 1729332031610,
      "updateTime": 1729332031602,
      "startDelayInSeconds": 0,
      "retried": false,
      "executed": true,
      "callbackFromWorker": true,
      "responseTimeoutSeconds": 3600,
      "workflowInstanceId": "f9ce5d57-8e00-11ef-bbcb-0242ac110002",
      "workflowType": "dynamic_workflow",
      "taskId": "f9cef998-8e00-11ef-bbcb-0242ac110002",
      "callbackAfterSeconds": 0,
      "workerId": "BiscuitBobby",
      "outputData": {
        "result": "user_a@example.com"
      },
      "workflowTask": {
        "name": "get_user_email",
        "taskReferenceName": "get_user_email_ref",
        "description": null,
        "inputParameters": {
          "userid": "${workflow.input.userid}"
        },
        "type": "SIMPLE",
        "dynamicTaskNameParam": null,
        "caseValueParam": null,
        "caseExpression": null,
        "scriptExpression": null,
        "dynamicForkJoinTasksParam": null,
        "dynamicForkTasksParam": null,
        "dynamicForkTasksInputParamName": null,
        "startDelay": 0,
        "subWorkflowParam": null,
        "sink": null,
        "optional": false,
        "taskDefinition": {
          "ownerApp": null,
          "createTime": null,
          "updateTime": null,
          "createdBy": null,
          "updatedBy": null,
          "accessPolicy": {},
          "name": "get_user_email",
          "description": null,
          "retryCount": 3,
          "timeoutSeconds": 0,
          "inputKeys": [],
          "outputKeys": [],
          "timeoutPolicy": "TIME_OUT_WF",
          "retryLogic": "FIXED",
          "retryDelaySeconds": 60,
          "responseTimeoutSeconds": 3600,
          "concurrentExecLimit": null,
          "inputTemplate": {},
          "rateLimitPerFrequency": 0,
          "rateLimitFrequencyInSeconds": 1,
          "isolationGroupId": null,
          "executionNameSpace": null,
          "ownerEmail": null,
          "pollTimeoutSeconds": null,
          "backoffScaleFactor": 1
        },
        "rateLimited": null,
        "asyncComplete": false,
        "loopCondition": null,
        "retryCount": null,
        "evaluatorType": null,
        "expression": null
      },
      "rateLimitPerFrequency": 0,
      "rateLimitFrequencyInSeconds": 1,
      "workflowPriority": 0,
      "iteration": 0,
      "subworkflowChanged": false,
      "queueWaitTime": 201,
      "loopOverTask": false,
      "taskDefinition": {
        "ownerApp": null,
        "createTime": null,
        "updateTime": null,
        "createdBy": null,
        "updatedBy": null,
        "accessPolicy": {},
        "name": "get_user_email",
        "description": null,
        "retryCount": 3,
        "timeoutSeconds": 0,
        "inputKeys": [],
        "outputKeys": [],
        "timeoutPolicy": "TIME_OUT_WF",
        "retryLogic": "FIXED",
        "retryDelaySeconds": 60,
        "responseTimeoutSeconds": 3600,
        "concurrentExecLimit": null,
        "inputTemplate": {},
        "rateLimitPerFrequency": 0,
        "rateLimitFrequencyInSeconds": 1,
        "isolationGroupId": null,
        "executionNameSpace": null,
        "ownerEmail": null,
        "pollTimeoutSeconds": null,
        "backoffScaleFactor": 1
      }
    },
    {
      "taskType": "send_email",
      "status": "COMPLETED",
      "inputData": {
        "subject": "Hello from Orkes",
        "body": "Test Email",
        "email": "user_a@example.com"
      },
      "referenceTaskName": "send_email_ref",
      "retryCount": 0,
      "seq": 2,
      "pollCount": 1,
      "taskDefName": "send_email",
      "scheduledTime": 1729332031613,
      "startTime": 1729332031810,
      "endTime": 1729332031817,
      "updateTime": 1729332031810,
      "startDelayInSeconds": 0,
      "retried": false,
      "executed": false,
      "callbackFromWorker": true,
      "responseTimeoutSeconds": 3600,
      "workflowInstanceId": "f9ce5d57-8e00-11ef-bbcb-0242ac110002",
      "workflowType": "dynamic_workflow",
      "taskId": "f9ef2bc9-8e00-11ef-bbcb-0242ac110002",
      "callbackAfterSeconds": 0,
      "workerId": "BiscuitBobby",
      "outputData": {
        "result": null
      },
      "workflowTask": {
        "name": "send_email",
        "taskReferenceName": "send_email_ref",
        "description": null,
        "inputParameters": {
          "email": "${get_user_email_ref.output.result}",
          "subject": "Hello from Orkes",
          "body": "Test Email"
        },
        "type": "SIMPLE",
        "dynamicTaskNameParam": null,
        "caseValueParam": null,
        "caseExpression": null,
        "scriptExpression": null,
        "dynamicForkJoinTasksParam": null,
        "dynamicForkTasksParam": null,
        "dynamicForkTasksInputParamName": null,
        "startDelay": 0,
        "subWorkflowParam": null,
        "sink": null,
        "optional": false,
        "taskDefinition": {
          "ownerApp": null,
          "createTime": null,
          "updateTime": null,
          "createdBy": null,
          "updatedBy": null,
          "accessPolicy": {},
          "name": "send_email",
          "description": null,
          "retryCount": 3,
          "timeoutSeconds": 0,
          "inputKeys": [],
          "outputKeys": [],
          "timeoutPolicy": "TIME_OUT_WF",
          "retryLogic": "FIXED",
          "retryDelaySeconds": 60,
          "responseTimeoutSeconds": 3600,
          "concurrentExecLimit": null,
          "inputTemplate": {},
          "rateLimitPerFrequency": 0,
          "rateLimitFrequencyInSeconds": 1,
          "isolationGroupId": null,
          "executionNameSpace": null,
          "ownerEmail": null,
          "pollTimeoutSeconds": null,
          "backoffScaleFactor": 1
        },
        "rateLimited": null,
        "asyncComplete": false,
        "loopCondition": null,
        "retryCount": null,
        "evaluatorType": null,
        "expression": null
      },
      "rateLimitPerFrequency": 0,
      "rateLimitFrequencyInSeconds": 1,
      "workflowPriority": 0,
      "iteration": 0,
      "subworkflowChanged": false,
      "queueWaitTime": 197,
      "loopOverTask": false,
      "taskDefinition": {
        "ownerApp": null,
        "createTime": null,
        "updateTime": null,
        "createdBy": null,
        "updatedBy": null,
        "accessPolicy": {},
        "name": "send_email",
        "description": null,
        "retryCount": 3,
        "timeoutSeconds": 0,
        "inputKeys": [],
        "outputKeys": [],
        "timeoutPolicy": "TIME_OUT_WF",
        "retryLogic": "FIXED",
        "retryDelaySeconds": 60,
        "responseTimeoutSeconds": 3600,
        "concurrentExecLimit": null,
        "inputTemplate": {},
        "rateLimitPerFrequency": 0,
        "rateLimitFrequencyInSeconds": 1,
        "isolationGroupId": null,
        "executionNameSpace": null,
        "ownerEmail": null,
        "pollTimeoutSeconds": null,
        "backoffScaleFactor": 1
      }
    }
  ],
  "input": {
    "userid": "user_a"
  },
  "output": {
    "send_emaol": null,
    "email": "user_a@example.com"
  },
  "taskToDomain": {},
  "failedReferenceTaskNames": [],
  "workflowDefinition": {
    "ownerApp": null,
    "createTime": null,
    "updateTime": null,
    "createdBy": null,
    "updatedBy": null,
    "accessPolicy": {},
    "name": "dynamic_workflow",
    "description": null,
    "version": 1,
    "tasks": [
      {
        "name": "get_user_email",
        "taskReferenceName": "get_user_email_ref",
        "description": null,
        "inputParameters": {
          "userid": "${workflow.input.userid}"
        },
        "type": "SIMPLE",
        "dynamicTaskNameParam": null,
        "caseValueParam": null,
        "caseExpression": null,
        "scriptExpression": null,
        "dynamicForkJoinTasksParam": null,
        "dynamicForkTasksParam": null,
        "dynamicForkTasksInputParamName": null,
        "startDelay": 0,
        "subWorkflowParam": null,
        "sink": null,
        "optional": false,
        "taskDefinition": {
          "ownerApp": null,
          "createTime": null,
          "updateTime": null,
          "createdBy": null,
          "updatedBy": null,
          "accessPolicy": {},
          "name": "get_user_email",
          "description": null,
          "retryCount": 3,
          "timeoutSeconds": 0,
          "inputKeys": [],
          "outputKeys": [],
          "timeoutPolicy": "TIME_OUT_WF",
          "retryLogic": "FIXED",
          "retryDelaySeconds": 60,
          "responseTimeoutSeconds": 3600,
          "concurrentExecLimit": null,
          "inputTemplate": {},
          "rateLimitPerFrequency": 0,
          "rateLimitFrequencyInSeconds": 1,
          "isolationGroupId": null,
          "executionNameSpace": null,
          "ownerEmail": null,
          "pollTimeoutSeconds": null,
          "backoffScaleFactor": 1
        },
        "rateLimited": null,
        "asyncComplete": false,
        "loopCondition": null,
        "retryCount": null,
        "evaluatorType": null,
        "expression": null
      },
      {
        "name": "send_email",
        "taskReferenceName": "send_email_ref",
        "description": null,
        "inputParameters": {
          "email": "${get_user_email_ref.output.result}",
          "subject": "Hello from Orkes",
          "body": "Test Email"
        },
        "type": "SIMPLE",
        "dynamicTaskNameParam": null,
        "caseValueParam": null,
        "caseExpression": null,
        "scriptExpression": null,
        "dynamicForkJoinTasksParam": null,
        "dynamicForkTasksParam": null,
        "dynamicForkTasksInputParamName": null,
        "startDelay": 0,
        "subWorkflowParam": null,
        "sink": null,
        "optional": false,
        "taskDefinition": {
          "ownerApp": null,
          "createTime": null,
          "updateTime": null,
          "createdBy": null,
          "updatedBy": null,
          "accessPolicy": {},
          "name": "send_email",
          "description": null,
          "retryCount": 3,
          "timeoutSeconds": 0,
          "inputKeys": [],
          "outputKeys": [],
          "timeoutPolicy": "TIME_OUT_WF",
          "retryLogic": "FIXED",
          "retryDelaySeconds": 60,
          "responseTimeoutSeconds": 3600,
          "concurrentExecLimit": null,
          "inputTemplate": {},
          "rateLimitPerFrequency": 0,
          "rateLimitFrequencyInSeconds": 1,
          "isolationGroupId": null,
          "executionNameSpace": null,
          "ownerEmail": null,
          "pollTimeoutSeconds": null,
          "backoffScaleFactor": 1
        },
        "rateLimited": null,
        "asyncComplete": false,
        "loopCondition": null,
        "retryCount": null,
        "evaluatorType": null,
        "expression": null
      }
    ],
    "inputParameters": [],
    "outputParameters": {
      "email": "${get_user_email_ref.output.result}",
      "send_emaol": "${send_email_ref.output.result}"
    },
    "failureWorkflow": "",
    "schemaVersion": 2,
    "restartable": true,
    "workflowStatusListenerEnabled": false,
    "ownerEmail": null,
    "timeoutPolicy": "ALERT_ONLY",
    "timeoutSeconds": 60,
    "variables": {},
    "inputTemplate": {}
  },
  "priority": 0,
  "variables": {},
  "lastRetriedTime": 0,
  "failedTaskNames": [],
  "workflowVersion": 1,
  "startTime": 1729332031397,
  "workflowName": "dynamic_workflow"
}

const WorkflowPage: React.FC = () => {
  const { slug } = useParams<{ slug: string }>();

  const handleClick = () => {
  };

  return (
    <div className="relative flex flex-col items-center justify-center h-screen bg-gray-100">
      <WorkflowGraph workflowJson={workflowJson} />
      <Button onClick={handleClick} label="Initiate" />
    </div>
  );
};

export default WorkflowPage;
